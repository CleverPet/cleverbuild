#!/usr/bin/env python

import argparse
import os
import re
import subprocess
# import sys
import tempfile


def run(cmd):
    print("----------------------------------------------------------------------")
    print("# %s" % cmd)
    print("----------------------------------------------------------------------")
    if os.system(cmd) != 0:
        raise Exception(cmd)


# https://blog.codinghorror.com/sorting-for-humans-natural-sort-order
def sort_human(l):
    convert = lambda text: int(text) if text.isdigit() else text
    alphanum_key = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]
    l.sort(key=alphanum_key)


parser = argparse.ArgumentParser(description="Run a clever script.")
parser.add_argument("cleverscript", nargs="?", default=None, help="cleverscript to run, e.g., \"deploy-to-production\" runs \".cleverscript-deploy-to-production\" (default is to run default \".cleverscript\" if exists)")
parser.add_argument("--cleverbuild_number", help="the cleverbuild_number to run the cleverscript (default is latest cleverbuild_number)")
args = parser.parse_args()

#run("git fetch --tags")

# get tag
# ### TODO USE GIT DESCRIBE --TAGS (AND GET RID OF SORT_HUMAN) ?!?
cleverbuild_number = args.cleverbuild_number
if not cleverbuild_number:
    tags = []
    for line in subprocess.Popen("git tag".split(), stdout=subprocess.PIPE).communicate()[0].splitlines():
        tag = os.path.basename(line)
        if "cleverbuild" in tag:
            tags.append(tag)
    sort_human(tags)
    cleverbuild_number = int(re.findall("[0-9]+", tags[-1])[-1])

tag = "cleverbuild-%s" % str(cleverbuild_number)
os.environ["CLEVERBUILD_NUMBER"] = str(cleverbuild_number)
git_commit_cmd = "git rev-parse %s" % tags[-1]
git_commit = subprocess.Popen(git_commit_cmd.split(), stdout=subprocess.PIPE).communicate()[0].splitlines()[0]
os.environ["GIT_COMMIT"] = git_commit

# work_tree
os.system("mkdir -p %s/cleverbuild" % tempfile.gettempdir())
work_tree = tempfile.mkdtemp(dir="%s/cleverbuild" % tempfile.gettempdir())
run("git archive %s | tar -x -C %s" % (tag, work_tree))

# run cleverbuild
dot_cleverbuild = ".cleverbuild"
run("cd %s && if [ -f %s ]; then ./%s; fi" % (work_tree, dot_cleverbuild, dot_cleverbuild))

# run cleverscript
dot_cleverscript = ".cleverscript"
if args.cleverscript:
    dot_cleverscript += "-%s" % args.cleverscript
    run("cd %s && ./%s" % (work_tree, dot_cleverscript))
else:
    run("cd %s && if [ -f %s ]; then ./%s; fi" % (work_tree, dot_cleverscript, dot_cleverscript))

run("echo %s %s" % (git_commit, tag))
