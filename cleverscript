#!/usr/bin/env python

import os
import re
import subprocess
import sys


def run(cmd):
    #print("----------------------------------------------------------------------")
    print("# %s" % cmd)
    #print("----------------------------------------------------------------------")
    if os.system(cmd) != 0:
        raise Exception(cmd)


# https://blog.codinghorror.com/sorting-for-humans-natural-sort-order
def sort_human(l):
    convert = lambda text: int(text) if text.isdigit() else text
    alphanum_key = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]
    l.sort(key=alphanum_key)


repo = sys.argv[1]
cleverconfig = None
if len(sys.argv) > 2:
    cleverconfig = sys.argv[2]

name = os.path.splitext(os.path.basename(repo))[0]

workdir = "/tmp/%s" % name
os.system("mkdir -p %s" % workdir)
os.chdir(workdir)

run("git init")
run("git fetch %s +refs/heads/*:refs/remotes/origin/*" % repo)
run("git config remote.origin.url %s" % repo)
run("git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/*")

tags = ["cleverbuild-0"]
for line in subprocess.Popen("git tag".split(), stdout=subprocess.PIPE).communicate()[0].splitlines():
    tag = os.path.basename(line)
    if "cleverbuild" in tag:
        tags.append(tag)

sort_human(tags)

run("git checkout %s" % tags[-1])

build_number = int(re.findall("[0-9]+", tags[-1])[-1])
os.environ["CLEVERBUILD_NUMBER"] = str(build_number)

# cleverbuild
run("./.cleverbuild")

# cleverscript
cleverscript = "./.cleverscript"
if cleverconfig:
    cleverscript += "-%s" % cleverconfig
run(cleverscript)
