#!/usr/bin/env python

import os
import re
import subprocess
import sys
import tempfile


def run(cmd):
    print("----------------------------------------------------------------------")
    print("# %s" % cmd)
    print("----------------------------------------------------------------------")
    if os.system(cmd) != 0:
        raise Exception(cmd)


# https://blog.codinghorror.com/sorting-for-humans-natural-sort-order
def sort_human(l):
    convert = lambda text: int(text) if text.isdigit() else text
    alphanum_key = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]
    l.sort(key=alphanum_key)


run("git fetch --tags")

# get latest tag
tags = []
for line in subprocess.Popen("git tag".split(), stdout=subprocess.PIPE).communicate()[0].splitlines():
    tag = os.path.basename(line)
    if "cleverbuild" in tag:
        tags.append(tag)
sort_human(tags)

# compute diff
if len(tags) > 0:
    run("! git --no-pager diff --exit-code %s..FETCH_HEAD" % tags[-1])

# compute new tag
build_number = 0
if len(tags) > 0:
    build_number = int(re.findall("[0-9]+", tags[-1])[-1])
next_build_number = build_number + 1
os.environ["CLEVERBUILD_NUMBER"] = str(next_build_number)
newtag = "cleverbuild-%s" % next_build_number

# work_tree
os.system("mkdir -p /tmp/cleverbuild")
work_tree = tempfile.mkdtemp(dir="/tmp/cleverbuild")
run("git archive FETCH_HEAD | tar -x -C %s" % work_tree)

# run cleverbuild
cleverbuild = ".cleverbuild"
run("cd %s && if [ -f %s ]; then ./%s; fi" % (work_tree, cleverbuild, cleverbuild))

# git tag
run("git tag %s FETCH_HEAD" % newtag)
run("git push origin %s" % newtag)

# git log
if len(tags) > 0:
    run("git --no-pager log --decorate %s..%s" % (tags[-1], newtag))
