#!/usr/bin/env python

import os
import re
import subprocess
import sys


def run(cmd):
    print("----------------------------------------------------------------------")
    print("-- %s" % cmd)
    print("----------------------------------------------------------------------")
    if os.system(cmd) != 0:
        raise Exception(cmd)


def sort_human(l):
    convert = lambda text: int(text) if text.isdigit() else text
    alphanum_key = lambda key: [convert(c) for c in re.split('([0-9]+)', key)]
    l.sort(key=alphanum_key)


repo = sys.argv[1]
cleverbuild_config = None
if len(sys.argv) > 2:
    cleverbuild_config = sys.argv[2]

print repo
print cleverbuild_config

name = os.path.splitext(os.path.basename(repo))[0]

run("mkdir -p /tmp/%s" % name)

os.chdir("/tmp/%s" % name)

run("git init")
run("git fetch %s +refs/heads/*:refs/remotes/origin/*" % repo)
run("git config remote.origin.url %s" % repo)
run("git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/*")
run("git checkout master")

tags = []
for line in subprocess.Popen("git tag".split(), stdout=subprocess.PIPE).communicate()[0].splitlines():
    tags.append(os.path.basename(line))

sort_human(tags)

major = 0
minor = 9
patch = int(re.findall("[0-9]+", tags[-1])[-1])

# next build number
if cleverbuild_config:
    os.environ["CLEVERBUILD_CONFIG"] = cleverbuild_config
os.environ["CLEVERBUILD_NUMBER"] = str(patch + 1)

cleverbuild_cmd = "./.cleverbuild"
if cleverbuild_config:
    cleverbuild_cmd += "-%s" % cleverbuild_config
run("./.cleverbuild")

newtag = ".".join(["v" + str(major), str(minor), str(patch + 1)])

run("git tag %s" % newtag)
